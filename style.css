:root {
    --rotateX: 0;
    --rotateY: 0;
    --rotateZ: 0;
    --opacity: 0;
}

body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    font-family: Helvetica, sans-serif;
    background-color: lightblue;
    position: relative;
}

label {
    position: absolute;
    left: 0;
}

input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    border: 1px solid #000000;
    height: 36px;
    width: 16px;
    border-radius: 3px;
    background: #ffffff;
    cursor: pointer;
    margin-top: -14px; /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */
}

label:has(input[name="rotateX"]) {
    bottom: 50%;
    left: -5rem;
    transform: translateY(-50%) rotateZ(-90deg);
}

label:has(input[name="rotateZ"]) {
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
}

label:has(input[name="opacity"]) {
    top: 2rem;
    left: 50%;
    transform: translateX(-50%);
}

label:has(input[name="rotateSide"]) {
    bottom: 2rem;
    left: 2rem;
}

.space {
    perspective: 600px;
    width: 200px;
    height: 200px;
}

.rubik {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transform: translateZ(-100px) rotateX(var(--rotateX)) rotateY(var(--rotateY)) rotateZ(var(--rotateZ));
}

.cube {
    width: calc(100% / 3);
    height: calc(100% / 3);
    transform-style: preserve-3d;
    transition: all 1s ease;
}

[data-side="front-side"],
[data-side="back-side"],
[data-side="left-side"],
[data-side="right-side"],
[data-side="top-side"],
[data-side="bottom-side"] {
    width: 100%;
    height: 100%;
    position: absolute;
    border: 1px solid black;
    opacity: var(--opacity, 0.5);
}

[data-side="front-side"] {
    background-color: red;
    transform: rotateY(0deg) translateZ(calc(100px / 3));
}

[data-side="back-side"] {
    background-color: orange;
    transform: rotateY(180deg) translateZ(calc(100px / 3));
}

[data-side="left-side"] {
    background-color: green;
    transform: rotateY(-90deg) translateZ(calc(100px / 3));
}

[data-side="right-side"] {
    background-color: blue;
    transform: rotateY(90deg) translateZ(calc(100px / 3));
}

[data-side="top-side"] {
    background-color: white;
    transform: rotateX(90deg) translateZ(calc(100px / 3));
}

[data-side="bottom-side"] {
    background-color: yellow;
    transform: rotateX(-90deg) translateZ(calc(100px / 3));
}

/***********************/

.cube4 {
    transform: translateY(-200px) translateX(calc(200px / 3));
}

.cube5 {
    transform: translateY(-200px) translateX(calc(200px / 3));
}

.cube6 {
    transform: translateY(-200px) translateX(calc(200px / 3));
}

.cube7 {
    transform: translateY(-400px) translateX(calc(200px - (200px / 3)));
}

.cube8 {
    transform: translateY(-400px) translateX(calc(200px - (200px / 3)));
}

.cube9 {
    transform: translateY(-400px) translateX(calc(200px - (200px / 3)));
}

.cube10 {
    transform: translateY(-600px) translateZ(calc(-200px / 3));
}

.cube11 {
    transform: translateY(-600px) translateZ(calc(-200px / 3));
}

.cube12 {
    transform: translateY(-600px) translateZ(calc(-200px / 3));
}

.cube13 {
    transform: translateY(-800px) translateX(calc(200px / 3)) translateZ(calc(-200px / 3));
}

.cube14 {
    transform: translateY(-800px) translateX(calc(200px / 3)) translateZ(calc(-200px / 3));
}

.cube15 {
    transform: translateY(-800px) translateX(calc(200px / 3)) translateZ(calc(-200px / 3));
}

.cube16 {
    transform: translateY(-1000px) translateX(calc(200px - (200px / 3))) translateZ(calc(-200px / 3));
}

.cube17 {
    transform: translateY(-1000px) translateX(calc(200px - (200px / 3))) translateZ(calc(-200px / 3));
}

.cube18 {
    transform: translateY(-1000px) translateX(calc(200px - (200px / 3))) translateZ(calc(-200px / 3));
}

.cube19 {
    transform: translateY(-1200px) translateZ(calc(-400px / 3));
}

.cube20 {
    transform: translateY(-1200px) translateZ(calc(-400px / 3));
}

.cube21 {
    transform: translateY(-1200px) translateZ(calc(-400px / 3));
}

.cube22 {
    transform: translateY(-1400px) translateX(calc(200px / 3)) translateZ(calc(-400px / 3));
}

.cube23 {
    transform: translateY(-1400px) translateX(calc(200px / 3)) translateZ(calc(-400px / 3));
}

.cube24 {
    transform: translateY(-1400px) translateX(calc(200px / 3)) translateZ(calc(-400px / 3));
}

.cube25 {
    transform: translateY(-1600px) translateX(calc(200px - (200px / 3))) translateZ(calc(-400px / 3));
}

.cube26 {
    transform: translateY(-1600px) translateX(calc(200px - (200px / 3))) translateZ(calc(-400px / 3));
}

.cube27 {
    transform: translateY(-1600px) translateX(calc(200px - (200px / 3))) translateZ(calc(-400px / 3));
}

:root:has(input[name="rotateSide"]:checked) .cube7 {
    transform: translateY(-400px) translateX(calc(200px - (200px / 3))) translateZ(calc(-400px / 3)) rotateX(90deg);
}

:root:has(input[name="rotateSide"]:checked) .cube8 {
    transform: translateY(-466px) translateX(calc(200px - (200px / 3))) translateZ(calc(-200px / 3)) rotateX(90deg);
}

:root:has(input[name="rotateSide"]:checked) .cube9 {
    transform: translateY(-533px) translateX(calc(200px - (200px / 3))) rotateX(90deg);
}

:root:has(input[name="rotateSide"]:checked) .cube16 {
    transform: translateY(-933px) translateX(calc(200px - (200px / 3))) translateZ(calc(-400px / 3)) rotateX(90deg);
}

:root:has(input[name="rotateSide"]:checked) .cube17 {
    transform: translateY(-1000px) translateX(calc(200px - (200px / 3))) translateZ(calc(-200px / 3)) rotateX(90deg);
}

:root:has(input[name="rotateSide"]:checked) .cube18 {
    transform: translateY(-1066px) translateX(calc(200px - (200px / 3))) rotateX(90deg);
}

:root:has(input[name="rotateSide"]:checked) .cube25 {
    transform: translateY(-1466px) translateX(calc(200px - (200px / 3))) translateZ(calc(-400px / 3)) rotateX(90deg);
}

:root:has(input[name="rotateSide"]:checked) .cube26 {
    transform: translateY(-1533px) translateX(calc(200px - (200px / 3))) translateZ(calc(-200px / 3)) rotateX(90deg);
}

:root:has(input[name="rotateSide"]:checked) .cube27 {
    transform: translateY(-1600px) translateX(calc(200px - (200px / 3))) rotateX(90deg);
}