@import "./sliders.css";
@import "./theme.css";
@import "./rotatecube.css";
@import "./fonts.css";
@import "./intro.css";
@import "./explode.css";
@import "./reset.css";
@import "./variables.css";

*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    -webkit-font-smoothing: antialiased;
    scroll-behavior: smooth;
}

body {
    height: 100vh;
    width: 100vw;
    font-family: "Doctor Glitch", Helvetica, sans-serif;
    color: var(--text-color);
    position: relative;
    background-color: var(--bg-body);
    overflow: hidden;
}

header {
    display: none;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
    height: 60px;
    position: fixed;
    width: 100%;
    z-index: 10;

    h1 {
        font-family: "Ailerons", sans-serif;
    }

    nav {
        display: flex;
        gap: 2px;

        label {
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.2s ease-in-out;

            svg path {
                fill: var(--text-color);
            }

            &:hover,
            &:focus-visible {
                background-color: grey;
            }
        }
    }
}

h1,
h2,
h3,
h4,
p {
    font-family: "Ailerons", sans-serif;
    font-size: var(--header-size);
    text-align: center;
}

main {
    width: 100vw;
    height: 100vh;
}

/*SPACE*/
main {

    display: flex;
    align-items: center;
    justify-content: center;
    perspective: 600px;
    transform-style: preserve-3d;
    position: relative;

    /*CUBE*/
    > div {

        width: var(--size-cube);
        height: var(--size-cube);
        transform-style: preserve-3d;
        display: none;
        transform:
            rotateX(calc(var(--rcx, 0) * -45deg))
            rotateY(calc(var(--rcy, 0) * -45deg));
        transition: 1s;
        position: relative;
        z-index: 1;

        /*SINGLE CUBIE*/
        > div {
            grid-area: 1/1;
            transform-style: preserve-3d;
            transform:
                    rotateX(calc(var(--rx, 0) * 90deg))
                    rotateY(calc(var(--ry, 0) * 90deg))
                    rotateZ(calc(var(--rz, 0) * 90deg))
                    translateX(calc(var(--tx, 0) * var(--size-cube)))
                    translateY(calc(var(--ty, 0) * var(--size-cube)))
                    translateZ(calc(var(--tz, 0) * var(--size-cube)));
            transition: 1s;

            &:nth-of-type(1) {
                --tx: -1;
                --ty: -1;
                --tz: -1;
                /*--ry: -1;*/
            }

            &:nth-of-type(2) {
                --tx: -1;
                --ty: -1;
                --tz: 0;
                /*--ry: -1;*/
                /*--rx: 1;*/
            }

            &:nth-of-type(3) {
                --tx: -1;
                --ty: -1;
                --tz: 1;
                /*--ry: -1;*/
            }

            &:nth-of-type(4) {
                --tx: 0;
                --ty: -1;
                --tz: -1;
                /*--ry: -1;*/
            }

            &:nth-of-type(5) {
                --tx: 0;
                --ty: -1;
                --tz: 0;
                /*--ry: -1;*/
                /*--rx: 1;*/
            }

            &:nth-of-type(6) {
                --tx: 0;
                --ty: -1;
                --tz: 1;
                /*--ry: -1;*/
            }

            &:nth-of-type(7) {
                --tx: 1;
                --ty: -1;
                --tz: -1;
                /*--ry: -1;*/
            }

            &:nth-of-type(8) {
                --tx: 1;
                --ty: -1;
                --tz: 0;
                /*--ry: -1;*/
                /*--rx: 1;*/
            }

            &:nth-of-type(9) {
                --tx: 1;
                --ty: -1;
                --tz: 1;
                /*--ry: -1;*/
            }

            &:nth-of-type(10) {
                --tx: -1;
                --ty: 0;
                --tz: -1;
            }

            &:nth-of-type(11) {
                --tx: -1;
                --ty: 0;
                --tz: 0;
            }

            &:nth-of-type(12) {
                --tx: -1;
                --ty: 0;
                --tz: 1;
            }

            &:nth-of-type(13) {
                --tx: 0;
                --ty: 0;
                --tz: -1;
                /*--rx: 1;*/
                /*--rz: -1;*/
            }

            &:nth-of-type(14) {
                --tx: 0;
                --ty: 0;
                --tz: 0;
                /*--rx: 1;*/
            }

            &:nth-of-type(15) {
                --tx: 0;
                --ty: 0;
                --tz: 1;
                /*--rx: 1;*/
            }

            &:nth-of-type(16) {
                --tx: 1;
                --ty: 0;
                --tz: -1;
            }

            &:nth-of-type(17) {
                --tx: 1;
                --ty: 0;
                --tz: 0;
            }

            &:nth-of-type(18) {
                --tx: 1;
                --ty: 0;
                --tz: 1;
            }

            &:nth-of-type(19) {
                --tx: -1;
                --ty: 1;
                --tz: -1;
                /*--ry: 1;*/
            }

            &:nth-of-type(20) {
                --tx: -1;
                --ty: 1;
                --tz: 0;
                /*--ry: 1;*/
            }

            &:nth-of-type(21) {
                --tx: -1;
                --ty: 1;
                --tz: 1;
                /*--ry: 1;*/
            }

            &:nth-of-type(22) {
                --tx: 0;
                --ty: 1;
                --tz: -1;
                /*--rx: 1;*/
                /*--rz: -1;*/
            }

            &:nth-of-type(23) {
                --tx: 0;
                --ty: 1;
                --tz: 0;
                /*--rx: 1;*/
            }

            &:nth-of-type(24) {
                --tx: 0;
                --ty: 1;
                --tz: 1;
                /*--rx: 1;*/
            }

            &:nth-of-type(25) {
                --tx: 1;
                --ty: 1;
                --tz: -1;
                /*--ry: 1;*/
            }

            &:nth-of-type(26) {
                --tx: 1;
                --ty: 1;
                --tz: 0;
                /*--ry: 1;*/
            }

            &:nth-of-type(27) {
                --tx: 1;
                --ty: 1;
                --tz: 1;
                /*--ry: 1;*/
            }
        }
    }
}

[data-side="front-side"],
[data-side="back-side"],
[data-side="left-side"],
[data-side="right-side"],
[data-side="top-side"],
[data-side="bottom-side"] {
    width: 100%;
    height: 100%;
    position: absolute;
    border: 1px solid black;
    z-index: 1;
    color: black;
    opacity: 0.5;
}

[data-side="front-side"] {
    background-color: red;
    transform: rotateY(0deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="back-side"] {
    background-color: orange;
    transform: rotateY(180deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="left-side"] {
    background-color: green;
    transform: rotateY(-90deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="right-side"] {
    background-color: blue;
    transform: rotateY(90deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="top-side"] {
    background-color: white;
    transform: rotateX(90deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="bottom-side"] {
    background-color: yellow;
    transform: rotateX(-90deg) translateZ(calc(var(--size-cube) * .5));
}

/* INTERACTIVE ELEMENTS */

form {
    display: none;
    grid-template-columns: 1fr 1fr ;
    gap: 20px;
    position: absolute;
    right: 10%;
    padding: 20px;
    /* From https://css.glass */
    background: rgba(255, 255, 255, 0.11);
    border-radius: 16px;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(6.6px);
    -webkit-backdrop-filter: blur(6.6px);
    border: 1px solid rgba(255, 255, 255, 0.27);
    transition: 0.5s ;
    z-index: 120;

    p {
        font-family: "Doctor Glitch", sans-serif;
        font-size: 1rem;
        grid-column: 1/ -1;
        user-select: none;

        &:nth-of-type(2) {
            display: none;
            font-size: 1rem;

        }
    }

    article > p {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }

    label {
        display: flex;
        justify-content: center;
        align-items: center;
        border: 1px solid rgb(255, 255, 255, 0.5);
        border-radius: 14px;
        width: 100px;
        height: 100px;
        cursor: pointer;
        transition: .3s;
        user-select: none;

        &:hover {
            background-color: rgb(255, 255, 255, 0.5);
            color: black;
        }

        &:has(input[name="success"]) {
            background-color: green;
            border: none;
            display: none;
            width: 100%;
            color: white;
        }

        &:has(input[name="reset"]) {
            background-color: red;
            border: none;
            display: none;
            width: 100%;
            color: white;
        }

        input {
            display: none;
        }
    }
}

@media only screen and (max-width: 768px) {
    form {
        bottom: -10px;
        right: 50%;
        transform: translateX(50%);
        width: 90%;
        gap: 10px;
        border-radius: 10px;

        p {
            text-align: center;
            margin-bottom: 10px;
        }

        label {
            width: 100%;
            height: 50px;
            border-radius: 10px;
        }
    }
}

/*:root:has(input[name="step1"]:checked) label:has(input[name="step1"]) {*/
/*    border: green;*/
/*    color: white;*/
/*    background-color: green;*/
/*}*/

/*:root:has(input[name="step2"]:checked):not(input[name="step1"]:checked) label:has(input[name="step2"]) {*/
/*    border: green;*/
/*    color: white;*/
/*    background-color: red;*/
/*}*/

/*:root:has(input[name="step2"]:checked):has(input[name="step1"]:checked) label:has(input[name="step2"]) {*/
/*    border: green;*/
/*    color: white;*/
/*    background-color: green;*/
/*}*/

/*:root:has(input[name="step3"]:checked):not(input[name="step1"]:checked) label:has(input[name="step3"]) {*/
/*    border: green;*/
/*    color: white;*/
/*    background-color: red;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):not(input[name="step2"]:checked) label:has(input[name="step1"]) {*/
/*    border: green;*/
/*    color: white;*/
/*    background-color: red;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="step3"]), :root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="step1"]) {*/
/*    border: green;*/
/*    color: white;*/
/*    background-color: green;*/
/*}*/

/*:root:has(input[name="step3"]:checked):not(input[name="step1"]:checked) form {*/
/*    box-shadow: 0 4px 20px rgb(222, 64, 64);*/
/*}*/

/*:root:has(input[name="step2"]:checked):not(input[name="step1"]:checked) form {*/
/*    box-shadow: 0 4px 20px rgb(222, 64, 64);*/
/*}*/

/*:root:has(input[name="step2"]:checked):has(input[name="step1"]:checked) form {*/
/*    box-shadow: none;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) form {*/
/*    box-shadow: 0 4px 20px rgb(64, 222, 88);*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):not(input[name="step2"]:checked) label:has(input[name="step2"]) {*/
/*    pointer-events: none;*/
/*}*/

/*:root:has(input[name="step3"]:checked):not(input[name="step1"]:checked):not(input[name="step2"]:checked) label:has(input[name="step2"]), :root:has(input[name="step3"]:checked):not(input[name="step1"]:checked):not(input[name="step2"]:checked) label:has(input[name="step1"]) {*/
/*    pointer-events: none;*/
/*}*/

/*:root:has(input[name="step2"]:checked):not(input[name="step1"]:checked):not(input[name="step3"]:checked) label:has(input[name="step1"]), :root:has(input[name="step2"]:checked):not(input[name="step1"]:checked):not(input[name="step3"]:checked) label:has(input[name="step3"]) {*/
/*    pointer-events: none;*/
/*}*/

/*:root:has(input[name="step2"]:checked):has(input[name="step1"]:checked):not(input[name="step3"]:checked) label:has(input[name="step3"]) {*/
/*    pointer-events: auto;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="step3"]), :root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="step2"]), :root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="step1"]) {*/
/*    pointer-events: none;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="explode"]), :root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="step1"]), :root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="step2"]), :root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="step3"]), :root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) form p {*/
/*    display: none;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) label:has(input[name="success"]) {*/
/*    display: flex;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) form {*/
/*    grid-template-columns: 1fr;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) form p:nth-of-type(1) {*/
/*    display: none;*/
/*}*/

/*:root:has(input[name="step3"]:checked):has(input[name="step1"]:checked):has(input[name="step2"]:checked) form p:nth-of-type(2) {*/
/*    display: block;*/
/*    font-size: 1.5rem;*/
/*}*/

:root:has(input[name="explode"]:checked) {

    label:has(input[name="step1"]) {
        display: none
    }

    label:has(input[name="step2"]) {
        display: none
    }

    label:has(input[name="step3"]) {
        display: none
    }

    label:has(input[name="explode"]) {
        display: none
    }

    dialog {
        display: block;
    }

    form {
        right: 50%;
        transform: translateX(50%);
        grid-template-columns: 1fr;

        > p:nth-of-type(1) {
            display: none;
        }
    }
}

:root:has([name="explode"]:checked) label:has(input[name="reset"]) {
    display: flex;
}

dialog {
    display: none;
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #202124;
    z-index: 100;
    border: none;
}

