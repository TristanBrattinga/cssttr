@import "./sliders.css";
@import "./theme.css";
@import "./rotatecube.css";
@import "./fonts.css";
@import "./intro.css";
@import "./explode.css";
@import "./reset.css";
@import "./variables.css";
@import "./cube.css";

*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    -webkit-font-smoothing: antialiased;
    scroll-behavior: smooth;
}

body {
    height: 100vh;
    width: 100vw;
    font-family: "Doctor Glitch", Helvetica, sans-serif;
    color: var(--text-color);
    position: relative;
    background-color: var(--bg-body);
    overflow: hidden;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 20px;
    height: 60px;
    position: fixed;
    width: 100%;
    z-index: 10;
    transform: translateY(-100%);
    transition: 1s;

    a {
        text-decoration: none;
        font-size: var(--header-size);
        color: white;
        font-family: "Ailerons", sans-serif;
    }

    nav {
        display: flex;
        gap: 2px;

        label {
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.2s ease-in-out;

            svg path {
                fill: var(--text-color);
            }

            &:hover,
            &:focus-visible {
                background-color: grey;
            }
        }
    }
}

h1,
h2,
h3,
h4,
p {
    font-family: "Ailerons", sans-serif;
    font-size: var(--header-size);
    text-align: center;
}

main {
    width: 100vw;
    height: 100vh;
}



/* INTERACTIVE ELEMENTS */

form {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    position: absolute;
    right: -50%;
    padding: 20px;
    /* From https://css.glass */
    background: rgba(255, 255, 255, 0.11);
    border-radius: 16px;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(6.6px);
    -webkit-backdrop-filter: blur(6.6px);
    border: 1px solid rgba(255, 255, 255, 0.27);
    transition: 2s;
    z-index: 120;

    p {
        font-family: "Doctor Glitch", sans-serif;
        font-size: 1rem;
        grid-column: 1/ -1;
        user-select: none;

        &:nth-of-type(2) {
            display: none;
            font-size: 1rem;

        }
    }

    article > p {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }

    label {
        display: flex;
        justify-content: center;
        align-items: center;
        border: 1px solid rgb(255, 255, 255, 0.5);
        border-radius: 14px;
        width: 100px;
        height: 100px;
        transition: .3s;
        user-select: none;
        pointer-events: none;

        &::after {
            content: "?";
            font-size: 2.5rem;
        }

        &:has(input:checked)::after {
            content: "âœ”";
        }

        &:has(input[name="explode"]) {
            display: none;
            grid-column: 1/ -1;
            width: 100%;
            background-color: green;
            border: none;
            cursor: pointer;
            pointer-events: auto;

            &::after {
                display: none;
            }
        }

        &:has(input[name="reset"]) {
            background-color: red;
            border: none;
            display: none;
            width: 100%;
            color: white;
            padding: 0 5rem;

            &::after {
                display: none;
            }
        }

        input {
            display: none;
        }
    }
}

@media only screen and (max-width: 768px) {
    form {
        grid-template-columns: repeat(4, 1fr);
        border-bottom: none;
        bottom: -100%;
        right: 50%;
        transform: translateX(50%);
        width: 90%;
        gap: 10px;
        border-radius: 10px 10px 0 0;

        p {
            text-align: center;
        }

        label {
            width: 100%;
            height: 50px;
            border-radius: 10px;

            &::after {
                font-size: 1rem;
            }

        }
    }

    :root:has(input[name="explode"]:checked) form {
        bottom: 50%;
        border: 1px solid rgba(255, 255, 255, 0.27);
        border-radius: 10px;
    }
}

:root:has(input[name="explode"]:checked) {

    dialog {
        display: block;
    }

    form {
        right: 50%;
        transform: translateX(50%);
        grid-template-columns: 1fr;
        transition: 1s ease-out;
        box-shadow: none;

        > p:nth-of-type(1) {
            display: none;
        }
    }
}

:root:has([name="explode"]:checked) label:has(input[name="reset"]) {
    pointer-events: auto;
    cursor: pointer;
    display: flex;
}

dialog {
    display: none;
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #202124;
    z-index: 100;
    border: none;
}

label:has([name="step8"]) {
    pointer-events: auto;
}

:root:has([name="step8"]:checked) label:has([name="step8"]) {
    pointer-events: none;
    background-color: green;
}

:root:has([name="step8"]:checked) label:has([name="step7"]) {
    pointer-events: auto;
}

:root:has([name="step7"]:checked) label:has([name="step7"]) {
    pointer-events: none;
    background-color: green;
}

:root:has([name="step7"]:checked) label:has([name="step6"]) {
    pointer-events: auto;
}

:root:has([name="step6"]:checked) label:has([name="step6"]) {
    pointer-events: none;
    background-color: green;
}

:root:has([name="step6"]:checked) label:has([name="step5"]) {
    pointer-events: auto;
}

:root:has([name="step5"]:checked) label:has([name="step5"]) {
    pointer-events: none;
    background-color: green;
}

:root:has([name="step5"]:checked) label:has([name="step4"]) {
    pointer-events: auto;
}

:root:has([name="step4"]:checked) label:has([name="step4"]) {
    pointer-events: none;
    background-color: green;
}

:root:has([name="step4"]:checked) label:has([name="step3"]) {
    pointer-events: auto;
}

:root:has([name="step3"]:checked) label:has([name="step3"]) {
    pointer-events: none;
    background-color: green;
}

:root:has([name="step3"]:checked) label:has([name="step2"]) {
    pointer-events: auto;
}

:root:has([name="step2"]:checked) label:has([name="step2"]) {
    pointer-events: none;
    background-color: green;
}

:root:has([name="step2"]:checked) label:has([name="step1"]) {
    pointer-events: auto;
}

:root:has([name="step1"]:checked) {

    label:has([name="step1"]) {
        pointer-events: none;
        background-color: green;
    }

    form {
        box-shadow: 0 4px 20px rgb(64, 222, 88);

        p {
            &:nth-of-type(1) {
                display: none;
            }

            &:nth-of-type(2) {
                display: block;
            }
        }

        label {
            display: none;

            &:has(input[name="explode"]) {
                display: grid;
            }
        }

    }
}

:root:has(input[name="explode"]:checked) label:has(input[name="explode"]) {
    display: none;
}

:root:has(input[name="explode"]:checked) form p:nth-of-type(2) {
    display: none;
}