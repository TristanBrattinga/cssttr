/*SPACE*/
main {

    display: flex;
    align-items: center;
    justify-content: center;
    perspective: 600px;
    transform-style: preserve-3d;
    position: relative;

    /*CUBE*/
    > div {

        width: var(--size-cube);
        height: var(--size-cube);
        transform-style: preserve-3d;
        display: grid;
        transform:
            translateY(5000%);
            rotateX(calc(var(--rcx, 0) * -45deg))
            rotateY(calc(var(--rcy, 0) * -45deg));
        transition: 1.5s;
        position: relative;
        z-index: 1;

        /*SINGLE CUBIE*/
        > div {
            grid-area: 1/1;
            transform-style: preserve-3d;
            transform:
                    rotateX(calc(var(--rx, 0) * 90deg))
                    rotateY(calc(var(--ry, 0) * 90deg))
                    rotateZ(calc(var(--rz, 0) * 90deg))
                    rotateX(calc(var(--rx1, 0) * 90deg))
                    rotateY(calc(var(--ry1, 0) * 90deg))
                    rotateZ(calc(var(--rz1, 0) * 90deg))
                    rotateX(calc(var(--rx2, 0) * 90deg))
                    rotateY(calc(var(--ry2, 0) * 90deg))
                    rotateZ(calc(var(--rz2, 0) * 90deg))
                    rotateX(calc(var(--rx3, 0) * 90deg))
                    rotateY(calc(var(--ry3, 0) * 90deg))
                    rotateZ(calc(var(--rz3, 0) * 90deg))
                    rotateX(calc(var(--rx4, 0) * 90deg))
                    rotateY(calc(var(--ry4, 0) * 90deg))
                    rotateZ(calc(var(--rz4, 0) * 90deg))
                    rotateX(calc(var(--rx5, 0) * 90deg))
                    rotateY(calc(var(--ry5, 0) * 90deg))
                    rotateZ(calc(var(--rz5, 0) * 90deg))
                    rotateX(calc(var(--rx6, 0) * 90deg))
                    rotateY(calc(var(--ry6, 0) * 90deg))
                    rotateZ(calc(var(--rz6, 0) * 90deg))
                    rotateX(calc(var(--rx7, 0) * 90deg))
                    rotateY(calc(var(--ry7, 0) * 90deg))
                    rotateZ(calc(var(--rz7, 0) * 90deg))
                    rotateX(calc(var(--rx8, 0) * 90deg))
                    rotateY(calc(var(--ry8, 0) * 90deg))
                    rotateZ(calc(var(--rz8, 0) * 90deg))
                    translateX(calc(var(--tx, 0) * var(--size-cube)))
                    translateY(calc(var(--ty, 0) * var(--size-cube)))
                    translateZ(calc(var(--tz, 0) * var(--size-cube)));
            transition: 1s;

            &:nth-of-type(1) {
                --tx: -1;
                --ty: -1;
                --tz: -1;
                --ry1: -1;
                --rz4: -1;
                --rx7: 1;
                --rz8: -1;
            }

            &:nth-of-type(2) {
                --tx: -1;
                --ty: -1;
                --tz: 0;
                --ry1: -1;
                --rz2: -1;
                --rx3: -1;
                --ry6: -1;
            }

            &:nth-of-type(3) {
                --tx: -1;
                --ty: -1;
                --tz: 1;
                --ry1: -1;
                --rz6: 1;
                --ry8: -1;
            }

            &:nth-of-type(4) {
                --tx: 0;
                --ty: -1;
                --tz: -1;
                --ry1: -1;
                --rz4: -1;
                --rx5: -1;
                --ry6: -1;
            }

            &:nth-of-type(5) {
                --tx: 0;
                --ty: -1;
                --tz: 0;
                --ry1: -1;
                --rz2: -1;
                --rx5: -1;
                --ry6: -1;
            }

            &:nth-of-type(6) {
                --tx: 0;
                --ty: -1;
                --tz: 1;
                --ry1: -1;
                --rz6: 1;
                --ry8: -1;
            }

            &:nth-of-type(7) {
                --tx: 1;
                --ty: -1;
                --tz: -1;
                --ry1: -1;
                --rz4: -1;
            }

            &:nth-of-type(8) {
                --tx: 1;
                --ty: -1;
                --tz: 0;
                --ry1: -1;
                --rz2: -1;
            }

            &:nth-of-type(9) {
                --tx: 1;
                --ty: -1;
                --tz: 1;
                --ry1: -1;
                --rz6: 1;
                --rx7: -1;
            }

            &:nth-of-type(10) {
                --tx: -1;
                --ty: 0;
                --tz: -1;
                --ry5: 1;
                --rz6: -1;
                --rx7: 1;
            }

            &:nth-of-type(11) {
                --tx: -1;
                --ty: 0;
                --tz: 0;
                --ry5: 1;
                --rx8: -1;
            }

            &:nth-of-type(12) {
                --tx: -1;
                --ty: 0;
                --tz: 1;
                --ry5: 1;
                --rx8: -1;
            }

            &:nth-of-type(13) {
                --tx: 0;
                --ty: 0;
                --tz: -1;
                --rx2: 1;
                --rz3: -1;
                --rz7: 1;
            }

            &:nth-of-type(14) {
                --tx: 0;
                --ty: 0;
                --tz: 0;
                --rx2: 1;
            }

            &:nth-of-type(15) {
                --tx: 0;
                --ty: 0;
                --tz: 1;
                --rx2: 1;
            }

            &:nth-of-type(16) {
                --tx: 1;
                --ty: 0;
                --tz: -1;
                --rx4: 1;
                --rz7: 1;
                --rx8: 1;
            }

            &:nth-of-type(17) {
                --tx: 1;
                --ty: 0;
                --tz: 0;
                --rx4: 1;
                --rz5: -1;
            }

            &:nth-of-type(18) {
                --tx: 1;
                --ty: 0;
                --tz: 1;
                --rx4: 1;
            }

            &:nth-of-type(19) {
                --tx: -1;
                --ty: 1;
                --tz: -1;
                --ry3: 1;
                --rz6: -1;
                --rx7: 1;
            }

            &:nth-of-type(20) {
                --tx: -1;
                --ty: 1;
                --tz: 0;
                --ry3: 1;
                --ry7: -1;
            }

            &:nth-of-type(21) {
                --tx: -1;
                --ty: 1;
                --tz: 1;
                --ry3: 1;
                --rz4: 1;
                --ry8: 1;
            }

            &:nth-of-type(22) {
                --tx: 0;
                --ty: 1;
                --tz: -1;
                --rx2: 1;
                --rz3: -1;
                --ry4: 1;
                --rx5: 1;
            }

            &:nth-of-type(23) {
                --tx: 0;
                --ty: 1;
                --tz: 0;
                --rx2: 1;
                --rz5: -1;
            }

            &:nth-of-type(24) {
                --tx: 0;
                --ty: 1;
                --tz: 1;
                --rx2: 1;
                --ry8: 1;
            }

            &:nth-of-type(25) {
                --tx: 1;
                --ty: 1;
                --tz: -1;
                --ry3: 1;
                --rz6: -1;
            }

            &:nth-of-type(26) {
                --tx: 1;
                --ty: 1;
                --tz: 0;
                --ry3: 1;
                --ry7: -1;
            }

            &:nth-of-type(27) {
                --tx: 1;
                --ty: 1;
                --tz: 1;
                --ry3: 1;
                --rz4: 1;
                --rx7: -1;
                --rz8: 1;
            }
        }
    }
}

[data-side="front-side"],
[data-side="back-side"],
[data-side="left-side"],
[data-side="right-side"],
[data-side="top-side"],
[data-side="bottom-side"] {
    width: 100%;
    height: 100%;
    position: absolute;
    border: 1px solid black;
    z-index: 1;
    color: black;
}

[data-side="front-side"] {
    background-color: red;
    transform: rotateY(0deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="back-side"] {
    background-color: orange;
    transform: rotateY(180deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="left-side"] {
    background-color: green;
    transform: rotateY(-90deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="right-side"] {
    background-color: blue;
    transform: rotateY(90deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="top-side"] {
    background-color: white;
    transform: rotateX(90deg) translateZ(calc(var(--size-cube) * .5));
}

[data-side="bottom-side"] {
    background-color: yellow;
    transform: rotateX(-90deg) translateZ(calc(var(--size-cube) * .5));
}